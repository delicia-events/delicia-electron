{"version":3,"sources":["utils/GuardedRoute.js","components/workManagement/registerWork/index.js","components/workManagement/workDetails/index.js","components/workManagement/manageExpense/staffSalaryData/index.js","components/workManagement/manageExpense/index.js","components/workManagement/ongoingWork/index.js","components/workManagement/searchWork/index.js","components/workManagement/index.js","components/staffManagement/registerStaff/index.js","components/staffManagement/staffDetails/index.js","components/staffManagement/trackEarnings/index.js","components/staffManagement/trackPayments/index.js","components/staffManagement/staffList/index.js","components/staffManagement/index.js","components/settings/basicSettings/index.js","components/settings/accountSettings/index.js","components/settings/index.js","components/navigation/index.js","components/applogin/index.js","App.js","reportWebVitals.js","index.js"],"names":["GuardedRoute","path","exact","element","localStorage","getItem","to","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","Option","Select","WorkRegistration","props","Form","useForm","form","useState","workType","setWorkType","name","onFinish","values","workDate","moment","Date","date","format","axios","post","workName","place","area","estimate","headers","then","response","status","notification","open","message","data","icon","CheckCircleOutlined","style","color","changeTab","CloseCircleOutlined","catch","error","scrollToFirstError","Item","label","rules","required","width","type","placeholder","onChange","value","onBlur","evt","target","setFieldsValue","htmlType","WorkDetails","state","totalExpence","workData","work_estimate","chartData","workId","this","work_id","get","expences","expenceByCategory","labels","forEach","push","expenceCategory","expenceAmount","setState","datasets","backgroundColor","hoverBackgroundColor","work_name","work_place","placement","closable","onClose","visible","title","drawerTitle","gutter","className","precision","valueStyle","prefix","work_type","calculateMargin","Object","keys","length","options","display","text","fontSize","legend","position","Component","Column","Table","confirm","Modal","StaffSalaryData","removeStaffSalaryData","staffSalaryData","basicConfig","salarySettlement","newData","filter","item","entry_id","dataToKeep","staffId","staff_id","staffDetails","staffShare","amount","console","log","getstaffSalaryData","getInitialData","deleteStaffSalary","record","ExclamationCircleOutlined","content","staff_name","okText","okType","cancelText","onOk","staffSalaryDataLoading","bind","onCancel","size","onClick","editStaffSalary","orientation","rowKey","loading","dataSource","bordered","dataIndex","render","action","layout","tailLayout","ManageExpense","all","spread","response1","response2","response3","staffData","handleAddExpense","expencedate","category","details","formRef","current","resetFields","handleStaffSalarySplit","splitSalary","totalSalaryVisibility","visibleSalary","updateSalary","totalSalaryRef","expenceId","expence_id","put","staffPanel","ref","disabled","marginLeft","List","fields","add","remove","map","field","align","fieldKey","validateTrigger","staff_phone_no","MinusCircleOutlined","key","block","marginTop","PlusOutlined","fetching","React","createRef","settled","OngoingWork","viewWorkDetailsClose","visibleWorkDetails","viewManageExpenseClose","visibleManageExpense","workDetails","isLoading","getWorkDetails","res","viewManageExpense","showWorkClosure","viewWorkDetails","viewAction","RangePicker","DatePicker","SearchWork","handleSearchWork","dateRange","dateFrom","dateTo","params","TabPane","Tabs","WorkManagement","handleTabChange","activeKey","activeTab","tabName","tab","RegisterStaff","staffName","staffMobileNo","mobileNo","StaffDetails","handlePayments","paymentdate","description","getOutstandingBalance","outstandingBalance","getStyle","borderBlockStyle","TrackEarnings","handleTrackEarnings","earnings","paymentDate","TrackPayments","handleTrackPayments","payments","refreshTrackPayments","confirmDeleteStaffPayment","deleteStaffPayment","entryId","viewAuction","StaffList","closeAllDrawer","visibleStaffDetails","visibleTrackEarnings","visibleTrackPayments","drawer","openDrawer","StaffManagement","BasicSettings","config","setConfig","useEffect","sqftCharge","sqft_charge","fullWorkCharge","total_labour_charge","setupCharge","setup_labour_charge","phaseoutCharge","phaseout_labour_charge","stageTotalCharge","stage_total_labour_charge","stageSetupCharge","stage_setup_labour_charge","stageFaceoutCharge","stage_phaseout_labour_charge","AccountSettings","accountSettings","setAccountSettings","username","password","Password","Settings","tabPosition","minHeight","Navigation","Header","Layout","Content","Sider","Footer","document","overflow","height","left","theme","mode","defaultSelectedKeys","BookOutlined","TeamOutlined","SettingOutlined","zIndex","padding","CalendarOutlined","textAlign","packageJson","version","AppLogin","buttonName","setButtonName","isSubmitting","setIsSubmitting","navigate","useNavigate","justify","userName","userPassword","setItem","UserOutlined","LockOutlined","App","handleUnload","window","addEventListener","clear","removeEventListener","replace","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8cd9b9ab.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Navigate } from \"react-router-dom\";\r\n\r\nconst GuardedRoute = ({ path, exact, element }) => {\r\n  let isAuthenticated = !!localStorage.getItem(\"isAuthenticated\");\r\n\r\n  return isAuthenticated ? (\r\n    <Route path={path} exact={exact} element={element} />\r\n  ) : (\r\n    <Navigate to=\"/login\" />\r\n  );\r\n};\r\n\r\nexport default GuardedRoute;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  InputNumber,\r\n  Select,\r\n  notification,\r\n} from \"antd\";\r\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\nconst { Option } = Select;\r\n\r\nconst WorkRegistration = (props) => {\r\n  const [form] = Form.useForm();\r\n  const [workType, setWorkType] = useState(\"\");\r\n\r\n  const claculateEstimate = (evt) => {\r\n    let area = evt.target.value;\r\n    let estimate = area * 6;\r\n    form.setFieldsValue({\r\n      estimate: estimate,\r\n    });\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    let workDate = moment(new Date(values.date)).format(\"YYYY-MM-DD HH:mm\");\r\n    axios\r\n      .post(\r\n        \"http://localhost:4000/v1.0/work-management/creatework\",\r\n        {\r\n          workName: values.workName,\r\n          date: workDate,\r\n          place: values.place,\r\n          workType: values.workType,\r\n          area: values.area,\r\n          estimate: values.estimate,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        if (response.status === 201) {\r\n          notification.open({\r\n            message: response.data.message,\r\n            icon: <CheckCircleOutlined style={{ color: \"#a0d911\" }} />,\r\n          });\r\n          props.changeTab(\"work-details\");\r\n        } else {\r\n          notification.open({\r\n            message: \"ERROR ON PROCESSING\",\r\n            icon: <CloseCircleOutlined style={{ color: \"#f5222d\" }} />,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        notification.open({\r\n          message: \"ERROR ON PROCESSING\",\r\n          icon: <CloseCircleOutlined style={{ color: \"#f5222d\" }} />,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...formItemLayout}\r\n      form={form}\r\n      name=\"workregistration\"\r\n      onFinish={onFinish}\r\n      scrollToFirstError\r\n    >\r\n      <Form.Item\r\n        name=\"workName\"\r\n        label=\"Work Name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input Work Name!\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input style={{ width: 350 }} />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"date\"\r\n        label=\"Date\"\r\n        rules={[\r\n          {\r\n            type: \"date\",\r\n            message: \"The input is not valid date!\",\r\n          },\r\n          {\r\n            required: true,\r\n            message: \"Please input date!\",\r\n          },\r\n        ]}\r\n      >\r\n        <DatePicker format=\"DD-MM-YYYY\" style={{ width: 350 }} />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"place\"\r\n        label=\"Place\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input place!\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input style={{ width: 350 }} />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"workType\"\r\n        label=\"Work Type\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input work type!\",\r\n          },\r\n        ]}\r\n      >\r\n        <Select\r\n          placeholder=\"Select work type\"\r\n          onChange={(value) => {\r\n            setWorkType(value);\r\n          }}\r\n          style={{ width: 350 }}\r\n        >\r\n          <Option value=\"panthal\">Panthal</Option>\r\n          <Option value=\"mandapam\">Mandapam</Option>\r\n          <Option value=\"rental\">Rental</Option>\r\n        </Select>\r\n      </Form.Item>\r\n      {workType === \"panthal\" && (\r\n        <Form.Item\r\n          name=\"area\"\r\n          label=\"Area (sq.ft)\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input area!\",\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber onBlur={claculateEstimate} style={{ width: 350 }} />\r\n        </Form.Item>\r\n      )}\r\n\r\n      <Form.Item\r\n        name=\"estimate\"\r\n        label=\"Estimate Amount\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input Estimate!\",\r\n          },\r\n        ]}\r\n      >\r\n        <InputNumber style={{ width: 350 }} />\r\n      </Form.Item>\r\n      <Form.Item {...tailFormItemLayout}>\r\n        <Button style={{ width: 350 }} type=\"primary\" htmlType=\"submit\">\r\n          Register Work\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default WorkRegistration;\r\n","import React, { Component } from \"react\";\r\nimport { Drawer, Statistic, Card, Row, Col } from \"antd\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./index.css\";\r\n\r\nclass WorkDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      totalExpence: 0,\r\n      estimate: this.props.workData.work_estimate,\r\n      chartData: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let workId = this.props.workData.work_id;\r\n    axios\r\n      .get(\r\n        `http://localhost:4000/v1.0/work-management/workStatistics/${workId}`\r\n      )\r\n      .then((response) => {\r\n        let expences = response.data.expenceByCategory;\r\n        let labels = [];\r\n        let data = [];\r\n        expences.forEach((element) => {\r\n          labels.push(element.expenceCategory);\r\n          data.push(element.expenceAmount);\r\n        });\r\n        this.setState({\r\n          totalExpence: response.data.totalExpence,\r\n          chartData: {\r\n            labels: labels,\r\n            datasets: [\r\n              {\r\n                label: \"Category\",\r\n                backgroundColor: [\r\n                  \"#9933ff\",\r\n                  \"#ff33ff\",\r\n                  \"#ebff33\",\r\n                  \"#5fff33\",\r\n                  \"#33eeff\",\r\n                  \"#ff3385\",\r\n                ],\r\n                hoverBackgroundColor: [\r\n                  \"#6600cc\",\r\n                  \"#cc00cc\",\r\n                  \"#b8cc00\",\r\n                  \"#3acc00\",\r\n                  \"#00bbcc\",\r\n                  \"#cc0052\",\r\n                ],\r\n                data: data,\r\n              },\r\n            ],\r\n          },\r\n        });\r\n      });\r\n  }\r\n  drawerTitle() {\r\n    return `${this.props.workData.work_name} (${this.props.workData.work_place})`;\r\n  }\r\n  calculateMargin() {\r\n    const { totalExpence, estimate } = this.state;\r\n    return estimate - totalExpence;\r\n  }\r\n\r\n  render() {\r\n    const { totalExpence, chartData, estimate } = this.state;\r\n    return (\r\n      <>\r\n        <Drawer\r\n          width={800}\r\n          placement=\"right\"\r\n          closable={true}\r\n          onClose={this.props.onClose}\r\n          visible={this.props.visible}\r\n          title={this.drawerTitle()}\r\n        >\r\n          <div>\r\n            <Row gutter={16}>\r\n              <Col span={8}>\r\n                <Card className=\"statistic-card\">\r\n                  <Statistic\r\n                    title=\"Estimate\"\r\n                    value={estimate}\r\n                    precision={2}\r\n                    valueStyle={{ color: \"#3f8600\" }}\r\n                    prefix=\"₹\"\r\n                  />\r\n                </Card>\r\n              </Col>\r\n              {this.props.workData.work_type !== \"rental\" && (\r\n                <Col span={8}>\r\n                  <Card className=\"statistic-card\">\r\n                    <Statistic\r\n                      title=\"Expences\"\r\n                      value={totalExpence}\r\n                      precision={2}\r\n                      valueStyle={{ color: \"#cf1322\" }}\r\n                      prefix=\"₹\"\r\n                    />\r\n                  </Card>\r\n                </Col>\r\n              )}\r\n              <Col span={8}>\r\n                <Card className=\"statistic-card\">\r\n                  <Statistic\r\n                    title=\"Margin\"\r\n                    value={this.calculateMargin()}\r\n                    precision={2}\r\n                    valueStyle={{ color: \"#0073e6\" }}\r\n                    prefix=\"₹\"\r\n                  />\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <div className=\"statistic\">\r\n            {Object.keys(chartData).length && (\r\n              <Doughnut\r\n                data={chartData}\r\n                options={{\r\n                  title: {\r\n                    display: true,\r\n                    text: \"Expences by Category\",\r\n                    fontSize: 20,\r\n                  },\r\n                  legend: {\r\n                    display: true,\r\n                    position: \"left\",\r\n                  },\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        </Drawer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WorkDetails;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Table, Divider, Space, Modal } from \"antd\";\r\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nconst { Column } = Table;\r\nconst { confirm } = Modal;\r\n\r\nclass StaffSalaryData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      staffSalaryData: [],\r\n      staffSalaryDataLoading: true,\r\n    };\r\n    this.removeStaffSalaryData = this.removeStaffSalaryData.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getstaffSalaryData();\r\n  }\r\n\r\n  getstaffSalaryData() {\r\n    let workId = this.props.workData.work_id;\r\n    axios\r\n      .get(\r\n        `http://localhost:4000/v1.0/work-management/staffSalaryData/${workId}`\r\n      )\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          this.setState({\r\n            staffSalaryData: response.data.staffSalaryData,\r\n            staffSalaryDataLoading: false,\r\n          });\r\n        }\r\n      });\r\n  }\r\n  editStaffSalary(record) {\r\n    console.log(\"record\", record);\r\n    confirm({\r\n      title: \"Are you sure delete this task?\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: \"Some descriptions\",\r\n      okText: \"Yes\",\r\n      okType: \"danger\",\r\n      cancelText: \"No\",\r\n      onOk() {\r\n        console.log(\"OK\");\r\n      },\r\n      onCancel() {\r\n        console.log(\"Cancel\");\r\n      },\r\n    });\r\n  }\r\n\r\n  removeStaffSalaryData = (data) => {\r\n    const { staffSalaryData } = this.state;\r\n    let workId = this.props.workData.work_id;\r\n    let workType = this.props.workData.work_type;\r\n    let basicConfig = this.props.basicConfig;\r\n    let salarySettlement = this.props.salarySettlement;\r\n\r\n    let newData = staffSalaryData.filter(\r\n      (item) => item.entry_id !== data.entry_id\r\n    );\r\n    let dataToKeep = [];\r\n    newData.forEach((element) => {\r\n      dataToKeep.push({\r\n        staffId: element.staff_id,\r\n        workType: element.work_type,\r\n      });\r\n    });\r\n    if (dataToKeep.length > 0) {\r\n      axios\r\n        .post(\r\n          `http://localhost:4000/v1.0/work-management/deleteSettledSalarys/${workId}`,\r\n          {\r\n            staffDetails: dataToKeep,\r\n            staffShare: salarySettlement.amount,\r\n            basicConfig: basicConfig,\r\n            workType: workType,\r\n          }\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n          if (response.status === 201) {\r\n            this.getstaffSalaryData();\r\n          }\r\n        });\r\n    } else {\r\n      axios\r\n        .post(\r\n          `http://localhost:4000/v1.0/work-management/deleteSettledSalary/${workId}`\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n          if (response.status === 201) {\r\n            this.getstaffSalaryData();\r\n            this.props.getInitialData();\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  deleteStaffSalary = (record) => {\r\n    confirm({\r\n      title: \"Are you sure delete this data?\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: `This action will delete staff details for ${record.staff_name} and recalculate salary`,\r\n      okText: \"Yes\",\r\n      okType: \"danger\",\r\n      cancelText: \"No\",\r\n      onOk: () => this.removeStaffSalaryData(record),\r\n    });\r\n  };\r\n\r\n  action(record) {\r\n    return (\r\n      <Space size=\"middle\">\r\n        <a onClick={() => this.editStaffSalary(record)}>Edit</a>\r\n        <a onClick={() => this.deleteStaffSalary(record)}>Delete</a>\r\n      </Space>\r\n    );\r\n  }\r\n  render() {\r\n    const { staffSalaryData, staffSalaryDataLoading } = this.state;\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\">Staff Salary Data</Divider>\r\n        <Table\r\n          rowKey={(staffDetails) => staffDetails.entry_id}\r\n          loading={staffSalaryDataLoading}\r\n          dataSource={staffSalaryData}\r\n          bordered\r\n        >\r\n          <Column title=\"Staff Name\" dataIndex=\"staff_name\" key=\"staff_id\" />\r\n          <Column title=\"Work Type\" dataIndex=\"work_type\" key=\"entry_id\" />\r\n          <Column title=\"Amount\" dataIndex=\"amount\" key=\"entry_id\" />\r\n          <Column\r\n            title=\"Actions\"\r\n            key=\"action\"\r\n            render={(record) => this.action(record)}\r\n          />\r\n        </Table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StaffSalaryData;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Form,\r\n  Select,\r\n  DatePicker,\r\n  Button,\r\n  Input,\r\n  InputNumber,\r\n  Divider,\r\n  notification,\r\n  Space,\r\n} from \"antd\";\r\nimport {\r\n  MinusCircleOutlined,\r\n  PlusOutlined,\r\n  CheckCircleOutlined,\r\n  CloseCircleOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport StaffSalaryData from \"./staffSalaryData\";\r\nimport \"./index.css\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nclass ManageExpense extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      salarySettlement: [],\r\n      fetching: false,\r\n      staffData: [],\r\n      visibleSalary: true,\r\n      basicConfig: [],\r\n    };\r\n    this.formRef = React.createRef();\r\n    this.totalSalaryRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    this.getInitialData();\r\n  }\r\n\r\n  getInitialData = () => {\r\n    let workId = this.props.workData.work_id;\r\n    axios\r\n      .all([\r\n        axios.get(\r\n          `http://localhost:4000/v1.0/work-management/salarySettled/${workId}`\r\n        ),\r\n        axios.get(\"http://localhost:4000/v1.0/staff-management/staffdetails\"),\r\n        axios.get(\"http://localhost:4000/v1.0/settings/basicconfig\"),\r\n      ])\r\n      .then(\r\n        axios.spread((response1, response2, response3) => {\r\n          console.log(response1);\r\n          this.setState({\r\n            salarySettlement: response1.data.salarySettlement[0],\r\n            staffData: response2.data.staffDetails,\r\n            basicConfig: response3.data.basicConfig,\r\n          });\r\n        })\r\n      );\r\n  };\r\n\r\n  handleAddExpense = (values) => {\r\n    let workId = this.props.workData.work_id;\r\n    let expencedate = moment(new Date(values.date)).format(\"YYYY-MM-DD HH:mm\");\r\n    axios\r\n      .post(\r\n        `http://localhost:4000/v1.0/work-management/createExpence/${workId}`,\r\n        {\r\n          date: expencedate,\r\n          amount: values.amount,\r\n          category: values.category,\r\n          details: values.details,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        if (response.status === 201) {\r\n          notification.open({\r\n            message: response.data.message,\r\n            icon: <CheckCircleOutlined style={{ color: \"#a0d911\" }} />,\r\n          });\r\n          this.formRef.current.resetFields();\r\n        } else {\r\n          notification.open({\r\n            message: \"ERROR ON PROCESSING\",\r\n            icon: <CloseCircleOutlined style={{ color: \"#f5222d\" }} />,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  handleStaffSalarySplit = (values) => {\r\n    const { salarySettlement, basicConfig } = this.state;\r\n    let workId = this.props.workData.work_id;\r\n    let workType = this.props.workData.work_type;\r\n    let staffShare = salarySettlement.amount;\r\n    let staffDetails = values.splitSalary;\r\n    if (staffDetails.length > 0) {\r\n      axios\r\n        .post(\r\n          `http://localhost:4000/v1.0/work-management/salarySettlement/${workId}`,\r\n          {\r\n            staffDetails: staffDetails,\r\n            staffShare: staffShare,\r\n            basicConfig: basicConfig,\r\n            workType: workType,\r\n          }\r\n        )\r\n        .then((response) => {\r\n          if (response.status === 201) {\r\n            notification.open({\r\n              message: response.data.message,\r\n              icon: <CheckCircleOutlined style={{ color: \"#a0d911\" }} />,\r\n            });\r\n            this.props.onClose();\r\n          } else {\r\n            notification.open({\r\n              message: \"ERROR ON PROCESSING\",\r\n              icon: <CloseCircleOutlined style={{ color: \"#f5222d\" }} />,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  totalSalaryVisibility = () => {\r\n    this.setState({\r\n      visibleSalary: !this.state.visibleSalary,\r\n    });\r\n  };\r\n\r\n  updateSalary = () => {\r\n    const { salarySettlement } = this.state;\r\n    let workId = this.props.workData.work_id;\r\n    let amount = this.totalSalaryRef.current.value;\r\n    let expenceId = salarySettlement.expence_id;\r\n    axios\r\n      .put(\r\n        `http://localhost:4000/v1.0/work-management/updateSalary/${workId}`,\r\n        {\r\n          amount: amount,\r\n          expenceId: expenceId,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        if (response.status === 201) {\r\n          notification.open({\r\n            message: response.data.message,\r\n            icon: <CheckCircleOutlined style={{ color: \"#a0d911\" }} />,\r\n          });\r\n          this.getInitialData();\r\n          this.totalSalaryVisibility();\r\n        } else {\r\n          notification.open({\r\n            message: \"ERROR ON PROCESSING\",\r\n            icon: <CloseCircleOutlined style={{ color: \"#f5222d\" }} />,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  staffPanel = () => {\r\n    const { staffData, visibleSalary, salarySettlement } = this.state;\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\">Modify Staff's Salary</Divider>\r\n        <Form name=\"staffDetails\" onFinish={this.handleStaffSalarySplit}>\r\n          <Form.Item name=\"totalSalary\" label=\"Total Salary\">\r\n            <InputNumber\r\n              ref={this.totalSalaryRef}\r\n              disabled={visibleSalary}\r\n              style={{ width: 250 }}\r\n              onBlur={this.updateSalary}\r\n              value={salarySettlement.amount}\r\n            />\r\n            <Button\r\n              onClick={this.totalSalaryVisibility}\r\n              style={{ width: 90, marginLeft: 10 }}\r\n              type=\"default\"\r\n            >\r\n              Edit\r\n            </Button>\r\n          </Form.Item>\r\n          <Divider orientation=\"left\">Split Staff Salary</Divider>\r\n          <Form.List name=\"splitSalary\">\r\n            {(fields, { add, remove }) => (\r\n              <>\r\n                {fields.map((field) => (\r\n                  <Space key={field.key} align=\"baseline\">\r\n                    <Form.Item\r\n                      {...field}\r\n                      label=\"Staff Name\"\r\n                      name={[field.name, \"staffId\"]}\r\n                      fieldKey={[field.fieldKey, \"staffId\"]}\r\n                      validateTrigger={[\"onChange\", \"onBlur\"]}\r\n                      rules={[\r\n                        { required: true, message: \"Missing staff name\" },\r\n                      ]}\r\n                    >\r\n                      <Select placeholder=\"Select Staff\" style={{ width: 200 }}>\r\n                        {staffData.map((data) => (\r\n                          <Option key={data.staff_id} value={data.staff_id}>\r\n                            {`${data.staff_name} (${data.staff_phone_no})`}\r\n                          </Option>\r\n                        ))}\r\n                      </Select>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                      {...field}\r\n                      label=\"Work Type\"\r\n                      name={[field.name, \"workType\"]}\r\n                      fieldKey={[field.fieldKey, \"workType\"]}\r\n                      validateTrigger={[\"onChange\", \"onBlur\"]}\r\n                      rules={[{ required: true, message: \"Missing workType\" }]}\r\n                    >\r\n                      <Select\r\n                        placeholder=\"Select category\"\r\n                        style={{ width: 200 }}\r\n                      >\r\n                        <Option value=\"fullwork\">Full Work</Option>\r\n                        <Option value=\"setup\">Set Up</Option>\r\n                        <Option value=\"phaseout\">Phase Out</Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                    <MinusCircleOutlined\r\n                      className=\"dynamic-delete-button\"\r\n                      onClick={() => remove(field.name)}\r\n                    />\r\n                  </Space>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"dashed\"\r\n                    block\r\n                    onClick={() => add()}\r\n                    style={{ width: \"100%\", marginTop: \"20px\" }}\r\n                    icon={<PlusOutlined />}\r\n                  >\r\n                    Add staff details\r\n                  </Button>\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n          <Form.Item>\r\n            <Button style={{ width: \"100%\" }} type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { salarySettlement, basicConfig } = this.state;\r\n    return (\r\n      <>\r\n        <Drawer\r\n          width={800}\r\n          placement=\"right\"\r\n          closable={true}\r\n          onClose={this.props.onClose}\r\n          visible={this.props.visible}\r\n          title=\"Expense\"\r\n        >\r\n          <Form\r\n            {...layout}\r\n            layout=\"horizontal\"\r\n            name=\"addExpense\"\r\n            onFinish={this.handleAddExpense}\r\n            ref={this.formRef}\r\n          >\r\n            <Form.Item\r\n              label=\"Date\"\r\n              name=\"date\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input date!\",\r\n                },\r\n              ]}\r\n            >\r\n              <DatePicker format=\"DD-MM-YYYY\" style={{ width: 350 }} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Expense Details\"\r\n              name=\"details\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input details!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"Details\" style={{ width: 350 }} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Expense Category\"\r\n              name=\"category\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please select category !\",\r\n                },\r\n              ]}\r\n            >\r\n              <Select placeholder=\"Select category\" style={{ width: 350 }}>\r\n                <Option value=\"fuel-charge\">Fuel Charge</Option>\r\n                <Option value=\"food\">Food</Option>\r\n                <Option value=\"rent\">Rent</Option>\r\n                <Option value=\"purchase\">Purchases</Option>\r\n                <Option value=\"others\">Others</Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Amount\"\r\n              name=\"amount\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input amount!\",\r\n                },\r\n              ]}\r\n            >\r\n              <InputNumber style={{ width: 350 }} />\r\n            </Form.Item>\r\n            <Form.Item {...tailLayout}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Add\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n          {salarySettlement.settled === 0 && this.staffPanel()}\r\n          {salarySettlement.settled === 1 && (\r\n            <StaffSalaryData\r\n              workData={this.props.workData}\r\n              basicConfig={basicConfig}\r\n              salarySettlement={salarySettlement}\r\n              getInitialData={this.getInitialData}\r\n            />\r\n          )}\r\n        </Drawer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ManageExpense;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Table, Space, Modal, notification } from \"antd\";\r\nimport {\r\n  CheckCircleOutlined,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nimport WorkDetails from \"../workDetails\";\r\nimport ManageExpense from \"../manageExpense\";\r\n\r\nconst { Column } = Table;\r\nconst { confirm } = Modal;\r\n\r\nclass OngoingWork extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      workDetails: [],\r\n      isLoading: true,\r\n      visibleWorkDetails: false,\r\n      visibleManageExpense: false,\r\n      workData: [],\r\n    };\r\n    this.getWorkDetails = this.getWorkDetails.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.getWorkDetails();\r\n  }\r\n\r\n  getWorkDetails() {\r\n    axios\r\n      .get(\"http://localhost:4000/v1.0/work-management/workdetails\")\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          this.setState({\r\n            workDetails: res.data.workDetails,\r\n            isLoading: false,\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  workName = (record) => {\r\n    return `${record.work_name} (${record.work_place})`;\r\n  };\r\n\r\n  viewWorkDetails(data) {\r\n    this.setState({\r\n      visibleWorkDetails: true,\r\n      workData: data,\r\n    });\r\n  }\r\n\r\n  viewWorkDetailsClose = () => {\r\n    this.setState({\r\n      visibleWorkDetails: false,\r\n      workData: [],\r\n    });\r\n  };\r\n\r\n  viewManageExpense(data) {\r\n    this.setState({\r\n      visibleManageExpense: true,\r\n      workData: data,\r\n    });\r\n  }\r\n\r\n  showWorkClosure(data) {\r\n    let getWorkDetails = this.getWorkDetails;\r\n    confirm({\r\n      title: \"Do you want to close this work?\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      okText: \"Yes\",\r\n      okType: \"danger\",\r\n      cancelText: \"No\",\r\n      onOk() {\r\n        axios\r\n          .put(\r\n            `http://localhost:4000/v1.0/work-management/updateWorkStatus/${data.work_id}`\r\n          )\r\n          .then((response) => {\r\n            if (response.status === 200) {\r\n              notification.open({\r\n                message: response.data.message,\r\n                icon: <CheckCircleOutlined style={{ color: \"#a0d911\" }} />,\r\n              });\r\n              getWorkDetails();\r\n            }\r\n          });\r\n      },\r\n      onCancel() {},\r\n    });\r\n  }\r\n\r\n  viewManageExpenseClose = () => {\r\n    this.setState({\r\n      visibleManageExpense: false,\r\n      workData: [],\r\n    });\r\n  };\r\n\r\n  viewAction(record) {\r\n    if (record.work_type !== \"rental\") {\r\n      return (\r\n        <Space size=\"middle\">\r\n          <a onClick={() => this.viewManageExpense(record)}>Manage Expence</a>\r\n          <a onClick={() => this.showWorkClosure(record)}>Work Closure</a>\r\n        </Space>\r\n      );\r\n    } else {\r\n      return (\r\n        <Space size=\"middle\">\r\n          <a onClick={() => this.showWorkClosure(record)}>Work Closure</a>\r\n        </Space>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      workDetails,\r\n      isLoading,\r\n      visibleWorkDetails,\r\n      visibleManageExpense,\r\n      workData,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        <Table\r\n          rowKey={(workDetails) => workDetails.work_id}\r\n          loading={isLoading}\r\n          dataSource={workDetails}\r\n        >\r\n          <Column\r\n            title=\"Work Name\"\r\n            key=\"work_name\"\r\n            render={(record) => (\r\n              <Space>\r\n                <a onClick={() => this.viewWorkDetails(record)}>\r\n                  {this.workName(record)}\r\n                </a>\r\n              </Space>\r\n            )}\r\n          />\r\n          <Column\r\n            title=\"Work Date\"\r\n            dataIndex=\"work_date\"\r\n            key=\"work_date\"\r\n            render={(workDate) => moment(workDate).format(\"DD MMM YYYY\")}\r\n          />\r\n          <Column title=\"Work Type\" dataIndex=\"work_type\" key=\"work_type\" />\r\n          <Column\r\n            title=\"Estimate Amount\"\r\n            dataIndex=\"work_estimate\"\r\n            key=\"work_estimate\"\r\n          />\r\n          <Column\r\n            title=\"Actions\"\r\n            key=\"action\"\r\n            render={(record) => this.viewAction(record)}\r\n          />\r\n        </Table>\r\n        {visibleWorkDetails ? (\r\n          <WorkDetails\r\n            visible={visibleWorkDetails}\r\n            onClose={this.viewWorkDetailsClose}\r\n            workData={workData}\r\n          />\r\n        ) : null}\r\n        {visibleManageExpense ? (\r\n          <ManageExpense\r\n            visible={visibleManageExpense}\r\n            onClose={this.viewManageExpenseClose}\r\n            workData={workData}\r\n          />\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OngoingWork;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Table, Form, DatePicker, Button, Space } from \"antd\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport WorkDetails from \"../workDetails\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Column } = Table;\r\n\r\nclass SearchWork extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      workDetails: [],\r\n      isLoading: false,\r\n      visibleWorkDetails: false,\r\n      visibleManageExpense: false,\r\n      workData: [],\r\n    };\r\n  }\r\n\r\n  handleSearchWork = (values) => {\r\n    if (!!values.dateRange) {\r\n      let dateFrom = moment(new Date(values.dateRange[0])).format(\"YYYY-MM-DD\");\r\n      let dateTo = moment(new Date(values.dateRange[1])).format(\"YYYY-MM-DD\");\r\n      axios\r\n        .get(`http://localhost:4000/v1.0/work-management/workhistory`, {\r\n          params: {\r\n            dateFrom: dateFrom,\r\n            dateTo: dateTo,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          this.setState({\r\n            workDetails: res.data.workDetails,\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  workName = (record) => {\r\n    return `${record.work_name} (${record.work_place})`;\r\n  };\r\n\r\n  viewWorkDetails(data) {\r\n    this.setState({\r\n      visibleWorkDetails: true,\r\n      workData: data,\r\n    });\r\n  }\r\n\r\n  viewWorkDetailsClose = () => {\r\n    this.setState({\r\n      visibleWorkDetails: false,\r\n      workData: [],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { workDetails, isLoading, visibleWorkDetails, workData } = this.state;\r\n    return (\r\n      <>\r\n        <Form\r\n          name=\"dateRange\"\r\n          layout={\"inline\"}\r\n          onFinish={this.handleSearchWork}\r\n        >\r\n          <Form.Item name=\"dateRange\" label=\"Date Range\">\r\n            <RangePicker />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        <Table\r\n          rowKey={(workDetails) => workDetails.work_id}\r\n          loading={isLoading}\r\n          dataSource={workDetails}\r\n        >\r\n          <Column\r\n            title=\"Work Name\"\r\n            key=\"work_name\"\r\n            render={(record) => (\r\n              <Space>\r\n                <a onClick={() => this.viewWorkDetails(record)}>\r\n                  {this.workName(record)}\r\n                </a>\r\n              </Space>\r\n            )}\r\n          />\r\n          <Column\r\n            title=\"Work Date\"\r\n            dataIndex=\"work_date\"\r\n            key=\"work_date\"\r\n            render={(workDate) => moment(workDate).format(\"DD MMM YYYY\")}\r\n          />\r\n          <Column title=\"Work Type\" dataIndex=\"work_type\" key=\"work_type\" />\r\n          <Column\r\n            title=\"Estimate Amount\"\r\n            dataIndex=\"work_estimate\"\r\n            key=\"work_estimate\"\r\n          />\r\n        </Table>\r\n        {visibleWorkDetails ? (\r\n          <WorkDetails\r\n            visible={visibleWorkDetails}\r\n            onClose={this.viewWorkDetailsClose}\r\n            workData={workData}\r\n          />\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchWork;\r\n","import React, { Component } from \"react\";\r\nimport { Tabs } from \"antd\";\r\nimport RegisterWork from \"./registerWork\";\r\nimport OngoingWork from \"./ongoingWork\";\r\nimport SearchWork from \"./searchWork\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nclass WorkManagement extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      activeTab: \"work-details\",\r\n    };\r\n  }\r\n\r\n  handleTabChange = (activeKey) => {\r\n    this.setState({ activeTab: activeKey });\r\n  };\r\n\r\n  changeTab = (tabName) => {\r\n    this.setState({ activeTab: tabName });\r\n  };\r\n\r\n  render() {\r\n    const { activeTab } = this.state;\r\n    return (\r\n      <Tabs activeKey={activeTab} onChange={this.handleTabChange}>\r\n        <TabPane tab=\"Work Detalis\" key=\"work-details\">\r\n          {activeTab === \"work-details\" && (\r\n            <OngoingWork changeTab={this.changeTab} />\r\n          )}\r\n        </TabPane>\r\n        <TabPane tab=\"Work Registration\" key=\"work-reg\">\r\n          {activeTab === \"work-reg\" && (\r\n            <RegisterWork changeTab={this.changeTab} />\r\n          )}\r\n        </TabPane>\r\n        <TabPane tab=\"Search Work\" key=\"work-search\">\r\n          {activeTab === \"work-search\" && (\r\n            <SearchWork changeTab={this.changeTab} />\r\n          )}\r\n        </TabPane>\r\n      </Tabs>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WorkManagement;\r\n","import React from \"react\";\r\nimport { Form, Input, Button, notification } from \"antd\";\r\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst RegisterStaff = (props) => {\r\n  const [form] = Form.useForm();\r\n  const onFinish = (values) => {\r\n    axios\r\n      .post(\r\n        \"http://localhost:4000/v1.0/staff-management/createstaff\",\r\n        {\r\n          staffName: values.name,\r\n          staffMobileNo: values.mobileNo,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        if (response.status === 201) {\r\n          notification.open({\r\n            message: response.data.message,\r\n            icon: <CheckCircleOutlined style={{ color: \"#a0d911\" }} />,\r\n          });\r\n          props.changeTab(\"staff-details\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        let response = error.response;\r\n        notification.open({\r\n          message: response.data.message,\r\n          icon: <CloseCircleOutlined style={{ color: \"#f5222d\" }} />,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...formItemLayout}\r\n      form={form}\r\n      name=\"staffregistration\"\r\n      onFinish={onFinish}\r\n      scrollToFirstError\r\n    >\r\n      <Form.Item\r\n        name=\"name\"\r\n        label=\"Name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input full name!\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input style={{ width: 350 }} />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"mobileNo\"\r\n        label=\"Mobile No\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input mobile number!\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input style={{ width: 350 }} />\r\n      </Form.Item>\r\n      <Form.Item {...tailFormItemLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Register\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default RegisterStaff;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Statistic,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n  Input,\r\n  InputNumber,\r\n  notification,\r\n} from \"antd\";\r\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nclass StaffDetails extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      outstandingBalance: 0,\r\n    };\r\n    this.formRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    this.getOutstandingBalance();\r\n  }\r\n\r\n  getOutstandingBalance() {\r\n    let staffId = this.props.staffData.staff_id;\r\n    axios\r\n      .get(\r\n        `http://localhost:4000/v1.0/staff-management/outstandingBalance/${staffId}`\r\n      )\r\n      .then((response) => {\r\n        this.setState({\r\n          outstandingBalance: response.data.outstandingBalance,\r\n        });\r\n      });\r\n  }\r\n\r\n  getStyle() {\r\n    const { outstandingBalance } = this.state;\r\n    if (outstandingBalance < 0) {\r\n      return \"#cf1322\";\r\n    } else {\r\n      return \"#3f8600\";\r\n    }\r\n  }\r\n\r\n  handlePayments = (values) => {\r\n    let staffId = this.props.staffData.staff_id;\r\n    let paymentdate = moment(new Date(values.date)).format(\"YYYY-MM-DD HH:mm\");\r\n    axios\r\n      .post(\r\n        `http://localhost:4000/v1.0/staff-management/createPayments/${staffId}`,\r\n        {\r\n          date: paymentdate,\r\n          amount: values.amount,\r\n          description: values.description,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        if (response.status === 201) {\r\n          notification.open({\r\n            message: response.data.message,\r\n            icon: <CheckCircleOutlined style={{ color: \"#a0d911\" }} />,\r\n          });\r\n          this.formRef.current.resetFields();\r\n          this.getOutstandingBalance();\r\n        } else {\r\n          notification.open({\r\n            message: \"ERROR ON PROCESSING\",\r\n            icon: <CloseCircleOutlined style={{ color: \"#f5222d\" }} />,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { outstandingBalance } = this.state;\r\n    return (\r\n      <>\r\n        <Drawer\r\n          width={800}\r\n          placement=\"right\"\r\n          closable={true}\r\n          onClose={this.props.onClose}\r\n          visible={this.props.visible}\r\n          title={this.props.staffData.staff_name}\r\n        >\r\n          <div>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Card className=\"statistic-card\">\r\n                  <Statistic\r\n                    title=\"Outstanding Balance\"\r\n                    value={outstandingBalance}\r\n                    precision={2}\r\n                    valueStyle={{\r\n                      color: this.getStyle(),\r\n                      borderBlockStyle: \"none\",\r\n                    }}\r\n                    prefix=\"₹\"\r\n                  />\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <div className=\"payments\">\r\n            <h3>Make Payments</h3>\r\n            <Divider />\r\n            <Form\r\n              {...layout}\r\n              layout=\"horizontal\"\r\n              name=\"addPayments\"\r\n              onFinish={this.handlePayments}\r\n              ref={this.formRef}\r\n            >\r\n              <Form.Item\r\n                label=\"Date\"\r\n                name=\"date\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input date!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <DatePicker format=\"DD-MM-YYYY\" style={{ width: 350 }} />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Amount\"\r\n                name=\"amount\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input amount!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <InputNumber style={{ width: 350 }} />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Description\"\r\n                name=\"description\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input description!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Description\" style={{ width: 350 }} />\r\n              </Form.Item>\r\n              <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  Add\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        </Drawer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StaffDetails;\r\n","import React, { Component } from \"react\";\r\nimport { Drawer, Table, Divider, Form, DatePicker, Button } from \"antd\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Column } = Table;\r\n\r\nclass TrackEarnings extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      earnings: [],\r\n    };\r\n  }\r\n\r\n  handleTrackEarnings = (values) => {\r\n    if (!!values.dateRange) {\r\n      let staffId = this.props.staffData.staff_id;\r\n      let dateFrom = moment(new Date(values.dateRange[0])).format(\"YYYY-MM-DD\");\r\n      let dateTo = moment(new Date(values.dateRange[1])).format(\"YYYY-MM-DD\");\r\n      axios\r\n        .get(\r\n          `http://localhost:4000/v1.0/staff-management/earnings/${staffId}`,\r\n          {\r\n            params: {\r\n              dateFrom: dateFrom,\r\n              dateTo: dateTo,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          this.setState({\r\n            earnings: res.data.earnings,\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { earnings } = this.state;\r\n    return (\r\n      <>\r\n        <Drawer\r\n          width={800}\r\n          placement=\"right\"\r\n          closable={true}\r\n          onClose={this.props.onClose}\r\n          visible={this.props.visible}\r\n          title={`Earnings of ${this.props.staffData.staff_name}`}\r\n        >\r\n          <Form\r\n            name=\"dateRange\"\r\n            layout={\"inline\"}\r\n            onFinish={this.handleTrackEarnings}\r\n          >\r\n            <Form.Item name=\"dateRange\" label=\"Date Range\">\r\n              <RangePicker />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n          <>\r\n            <Divider orientation=\"left\">Earnings Log</Divider>\r\n            <Table\r\n              rowKey={(earnings) => earnings.entry_id}\r\n              dataSource={earnings}\r\n              bordered\r\n            >\r\n              <Column\r\n                title=\"Work Date\"\r\n                key=\"work_date\"\r\n                dataIndex=\"work_date\"\r\n                render={(paymentDate) =>\r\n                  moment(paymentDate).format(\"DD MMM YYYY\")\r\n                }\r\n              />\r\n              <Column\r\n                title=\"Work Name\"\r\n                key=\"work_name\"\r\n                render={(data) => `${data.work_name} (${data.work_place})`}\r\n              />\r\n              <Column title=\"Work Type\" dataIndex=\"work_type\" key=\"work_type\" />\r\n              <Column title=\"Amount\" dataIndex=\"amount\" key=\"amount\" />\r\n            </Table>\r\n          </>\r\n        </Drawer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TrackEarnings;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Drawer,\r\n  DatePicker,\r\n  Table,\r\n  Divider,\r\n  Form,\r\n  Button,\r\n  Space,\r\n  Modal,\r\n  notification,\r\n} from \"antd\";\r\nimport {\r\n  ExclamationCircleOutlined,\r\n  CheckCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Column } = Table;\r\nconst { confirm } = Modal;\r\n\r\nclass TrackPayments extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      payments: [],\r\n      dateFrom: \"\",\r\n      dateTo: \"\",\r\n    };\r\n  }\r\n\r\n  handleTrackPayments = (values) => {\r\n    if (!!values.dateRange) {\r\n      let staffId = this.props.staffData.staff_id;\r\n      let dateFrom = moment(new Date(values.dateRange[0])).format(\"YYYY-MM-DD\");\r\n      let dateTo = moment(new Date(values.dateRange[1])).format(\"YYYY-MM-DD\");\r\n      this.setState({\r\n        dateFrom,\r\n        dateTo,\r\n      });\r\n      axios\r\n        .get(\r\n          `http://localhost:4000/v1.0/staff-management/payments/${staffId}`,\r\n          {\r\n            params: {\r\n              dateFrom: dateFrom,\r\n              dateTo: dateTo,\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            let message;\r\n            if (response.data.payments.length === 0) {\r\n              message = `No Data found for the dates`;\r\n            } else {\r\n              message = response.data.message;\r\n            }\r\n            notification.open({\r\n              message: message,\r\n              icon: <CheckCircleOutlined style={{ color: \"#a0d911\" }} />,\r\n            });\r\n            this.setState({\r\n              payments: response.data.payments,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  refreshTrackPayments = () => {\r\n    const { dateFrom, dateTo } = this.state;\r\n    let staffId = this.props.staffData.staff_id;\r\n    axios\r\n      .get(`http://localhost:4000/v1.0/staff-management/payments/${staffId}`, {\r\n        params: {\r\n          dateFrom: dateFrom,\r\n          dateTo: dateTo,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        this.setState({\r\n          payments: res.data.payments,\r\n        });\r\n      });\r\n  };\r\n\r\n  confirmDeleteStaffPayment = (record) => {\r\n    confirm({\r\n      title: \"Are you sure delete this payment?\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      okText: \"Yes\",\r\n      okType: \"danger\",\r\n      cancelText: \"No\",\r\n      onOk: () => this.deleteStaffPayment(record),\r\n    });\r\n  };\r\n\r\n  deleteStaffPayment = (data) => {\r\n    let staffId = data.staff_id;\r\n    let entryId = data.entry_id;\r\n    axios\r\n      .post(\r\n        `http://localhost:4000/v1.0/staff-management/deletePayment/${staffId}`,\r\n        {\r\n          entryId: entryId,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        if (response.status === 201) {\r\n          notification.open({\r\n            message: response.data.message,\r\n            icon: <CheckCircleOutlined style={{ color: \"#a0d911\" }} />,\r\n          });\r\n          this.refreshTrackPayments();\r\n        }\r\n      });\r\n  };\r\n\r\n  viewAuction(record) {\r\n    return (\r\n      <Space size=\"middle\">\r\n        <a onClick={() => this.confirmDeleteStaffPayment(record)}>Delete</a>\r\n      </Space>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { payments } = this.state;\r\n    return (\r\n      <>\r\n        <Drawer\r\n          width={800}\r\n          placement=\"right\"\r\n          closable={true}\r\n          onClose={this.props.onClose}\r\n          visible={this.props.visible}\r\n          title={`Payments for ${this.props.staffData.staff_name}`}\r\n        >\r\n          <Form\r\n            name=\"dateRange\"\r\n            layout={\"inline\"}\r\n            onFinish={this.handleTrackPayments}\r\n          >\r\n            <Form.Item name=\"dateRange\" label=\"Date Range\">\r\n              <RangePicker />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n          <>\r\n            <Divider orientation=\"left\">Payments Log</Divider>\r\n            <Table\r\n              rowKey={(payments) => payments.entry_id}\r\n              dataSource={payments}\r\n              bordered\r\n            >\r\n              <Column\r\n                title=\"Payment Date\"\r\n                key=\"payment_date\"\r\n                dataIndex=\"payment_date\"\r\n                render={(paymentDate) =>\r\n                  moment(paymentDate).format(\"DD MMM YYYY\")\r\n                }\r\n              />\r\n              <Column title=\"Amount\" dataIndex=\"amount\" key=\"amount\" />\r\n              <Column\r\n                title=\"Description\"\r\n                dataIndex=\"description\"\r\n                key=\"description\"\r\n              />\r\n              <Column\r\n                title=\"Actions\"\r\n                key=\"action\"\r\n                render={(record) => this.viewAuction(record)}\r\n              />\r\n            </Table>\r\n          </>\r\n        </Drawer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TrackPayments;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Table, Space } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nimport StaffDetails from \"../staffDetails\";\r\nimport TrackEarnings from \"../trackEarnings\";\r\nimport TrackPayments from \"../trackPayments\";\r\n\r\nconst { Column } = Table;\r\n\r\nclass StaffList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      staffDetails: [],\r\n      isLoading: true,\r\n      staffData: [],\r\n      visibleStaffDetails: false,\r\n      visibleTrackEarnings: false,\r\n      visibleTrackPayments: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:4000/v1.0/staff-management/staffdetails\")\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          this.setState({\r\n            staffDetails: res.data.staffDetails,\r\n            isLoading: false,\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  openDrawer(data, drawer) {\r\n    this.setState({\r\n      [drawer]: true,\r\n      staffData: data,\r\n    });\r\n  }\r\n\r\n  closeAllDrawer = () => {\r\n    this.setState({\r\n      visibleStaffDetails: false,\r\n      visibleTrackEarnings: false,\r\n      visibleTrackPayments: false,\r\n      staffData: [],\r\n    });\r\n  };\r\n\r\n  viewAuction(record) {\r\n    return (\r\n      <Space size=\"middle\">\r\n        <a onClick={() => this.openDrawer(record, \"visibleTrackEarnings\")}>\r\n          Track Earnings\r\n        </a>\r\n        <a onClick={() => this.openDrawer(record, \"visibleTrackPayments\")}>\r\n          Track Payments\r\n        </a>\r\n      </Space>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      staffDetails,\r\n      isLoading,\r\n      visibleStaffDetails,\r\n      visibleTrackEarnings,\r\n      visibleTrackPayments,\r\n      staffData,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        <Table\r\n          rowKey={(staffDetails) => staffDetails.staff_id}\r\n          loading={isLoading}\r\n          dataSource={staffDetails}\r\n        >\r\n          <Column\r\n            title=\"Full Name\"\r\n            key=\"staff_name\"\r\n            render={(record) => (\r\n              <Space>\r\n                <a\r\n                  onClick={() => this.openDrawer(record, \"visibleStaffDetails\")}\r\n                >\r\n                  {record.staff_name}\r\n                </a>\r\n              </Space>\r\n            )}\r\n          />\r\n          <Column\r\n            title=\"Mobile No\"\r\n            dataIndex=\"staff_phone_no\"\r\n            key=\"staff_phone_no\"\r\n          />\r\n          <Column\r\n            title=\"Actions\"\r\n            key=\"action\"\r\n            render={(record) => this.viewAuction(record)}\r\n          />\r\n        </Table>\r\n        {visibleStaffDetails ? (\r\n          <StaffDetails\r\n            visible={visibleStaffDetails}\r\n            onClose={this.closeAllDrawer}\r\n            staffData={staffData}\r\n          />\r\n        ) : null}\r\n        {visibleTrackEarnings ? (\r\n          <TrackEarnings\r\n            visible={visibleTrackEarnings}\r\n            onClose={this.closeAllDrawer}\r\n            staffData={staffData}\r\n          />\r\n        ) : null}\r\n        {visibleTrackPayments ? (\r\n          <TrackPayments\r\n            visible={visibleTrackPayments}\r\n            onClose={this.closeAllDrawer}\r\n            staffData={staffData}\r\n          />\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StaffList;\r\n","import React, { Component } from \"react\";\r\nimport { Tabs } from \"antd\";\r\nimport RegisterStaff from \"./registerStaff\";\r\nimport StaffDetails from \"./staffList\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nclass StaffManagement extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      activeTab: \"staff-details\",\r\n    };\r\n  }\r\n\r\n  handleTabChange = (activeKey) => {\r\n    this.setState({ activeTab: activeKey });\r\n  };\r\n\r\n  changeTab = (tabName) => {\r\n    this.setState({ activeTab: tabName });\r\n  };\r\n\r\n  render() {\r\n    const { activeTab } = this.state;\r\n    return (\r\n      <Tabs activeKey={activeTab} onChange={this.handleTabChange}>\r\n        <TabPane tab=\"Staff List\" key=\"staff-details\">\r\n          {activeTab === \"staff-details\" && (\r\n            <StaffDetails changeTab={this.changeTab} />\r\n          )}\r\n        </TabPane>\r\n        <TabPane tab=\"Staff Registration\" key=\"staff-reg\">\r\n          {activeTab === \"staff-reg\" && (\r\n            <RegisterStaff changeTab={this.changeTab} />\r\n          )}\r\n        </TabPane>\r\n      </Tabs>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StaffManagement;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Button, InputNumber, notification, Divider } from \"antd\";\r\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nconst BasicSettings = () => {\r\n  const [form] = Form.useForm();\r\n  const [config, setConfig] = useState([]);\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:4000/v1.0/settings/basicconfig\").then((res) => {\r\n      if (res.status === 200) {\r\n        console.log(res);\r\n        form.setFieldsValue({\r\n          sqftCharge: config.sqft_charge,\r\n          fullWorkCharge: config.total_labour_charge,\r\n          setupCharge: config.setup_labour_charge,\r\n          phaseoutCharge: config.phaseout_labour_charge,\r\n          stageTotalCharge: config.stage_total_labour_charge,\r\n          stageSetupCharge: config.stage_setup_labour_charge,\r\n          stageFaceoutCharge: config.stage_phaseout_labour_charge,\r\n        });\r\n        setConfig(res.data.basicConfig);\r\n      }\r\n    });\r\n  }, [\r\n    config.phaseout_labour_charge,\r\n    config.setup_labour_charge,\r\n    config.sqft_charge,\r\n    config.stage_phaseout_labour_charge,\r\n    config.stage_setup_labour_charge,\r\n    config.stage_total_labour_charge,\r\n    config.total_labour_charge,\r\n    form,\r\n  ]);\r\n\r\n  function handleUpdateConfig(values) {\r\n    axios\r\n      .post(\r\n        \"http://localhost:4000/v1.0/settings/basicconfig\",\r\n        {\r\n          sqftCharge: values.sqftCharge,\r\n          fullWorkCharge: values.fullWorkCharge,\r\n          setupCharge: values.setupCharge,\r\n          phaseoutCharge: values.phaseoutCharge,\r\n          stageTotalCharge: values.stageTotalCharge,\r\n          stageSetupCharge: values.stageSetupCharge,\r\n          stageFaceoutCharge: values.stageFaceoutCharge,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          notification.open({\r\n            message: `Basic Settings Updated`,\r\n            icon: <CheckCircleOutlined style={{ color: \"#a0d911\" }} />,\r\n          });\r\n        } else {\r\n          notification.open({\r\n            message: \"ERROR\",\r\n            icon: <CloseCircleOutlined style={{ color: \"#f5222d\" }} />,\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      name=\"basiConfig\"\r\n      form={form}\r\n      onFinish={handleUpdateConfig}\r\n      layout=\"vertical\"\r\n    >\r\n      <Divider orientation=\"left\">Panthal Rates</Divider>\r\n      <Form.Item name=\"sqftCharge\" label=\"Sq.ft Charge\">\r\n        <InputNumber style={{ width: 350 }} />\r\n      </Form.Item>\r\n      <Form.Item name=\"fullWorkCharge\" label=\"Full Work Charge/sq.ft\">\r\n        <InputNumber style={{ width: 350 }} />\r\n      </Form.Item>\r\n      <Form.Item name=\"setupCharge\" label=\"Setup Charge/sq.ft\">\r\n        <InputNumber style={{ width: 350 }} />\r\n      </Form.Item>\r\n      <Form.Item name=\"phaseoutCharge\" label=\"Phaseout Charge/sq.ft\">\r\n        <InputNumber style={{ width: 350 }} />\r\n      </Form.Item>\r\n      <Divider orientation=\"left\">Stage Rates</Divider>\r\n      <Form.Item name=\"stageTotalCharge\" label=\"Total Work Charge/per event\">\r\n        <InputNumber style={{ width: 350 }} />\r\n      </Form.Item>\r\n      <Form.Item name=\"stageSetupCharge\" label=\"Setup Charge/per event\">\r\n        <InputNumber style={{ width: 350 }} />\r\n      </Form.Item>\r\n      <Form.Item name=\"stageFaceoutCharge\" label=\"Phaseout Charge/per event\">\r\n        <InputNumber style={{ width: 350 }} />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button htmlType=\"submit\" type=\"primary\">\r\n          Update Information\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default BasicSettings;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nconst AccountSettings = () => {\r\n  const [form] = Form.useForm();\r\n  const [accountSettings, setAccountSettings] = useState([]);\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:4000/v1.0/settings/account\").then((res) => {\r\n      if (res.status === 200) {\r\n        form.setFieldsValue({\r\n          username: accountSettings.username,\r\n          password: accountSettings.password,\r\n        });\r\n        setAccountSettings(res.data.accountSettings);\r\n      }\r\n    });\r\n  }, [accountSettings.password, accountSettings.username, form]);\r\n\r\n  return (\r\n    <Form form={form} layout=\"vertical\">\r\n      <Form.Item label=\"User Name\" name=\"username\">\r\n        <Input  style={{ width: 350 }} />\r\n      </Form.Item>\r\n      <Form.Item label=\"Password\" name=\"password\">\r\n        <Input.Password\r\n          style={{ width: 350 }}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button type=\"primary\">Update Information</Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AccountSettings;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Tabs } from \"antd\";\r\nimport BasicSettings from \"./basicSettings\";\r\nimport AccountSettings from \"./accountSettings\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    activeTab: \"account\",\r\n  };\r\n\r\n  handleTabChange = (activeKey) => {\r\n    this.setState({ activeTab: activeKey });\r\n  };\r\n\r\n  render() {\r\n    const { activeTab } = this.state;\r\n    return (\r\n      <>\r\n        <Tabs\r\n          activeKey={activeTab}\r\n          onChange={this.handleTabChange}\r\n          tabPosition=\"left\"\r\n          style={{ minHeight: \"60vh\" }}\r\n        >\r\n          <TabPane tab=\"Account Settings\" key=\"account\">\r\n            <h1>Account Settings</h1>\r\n            {activeTab === \"account\" && <AccountSettings />}\r\n          </TabPane>\r\n          <TabPane tab=\"Basic Settings\" key=\"basic\">\r\n            <h1>Basic Settings</h1>\r\n            {activeTab === \"basic\" && <BasicSettings />}\r\n          </TabPane>\r\n        </Tabs>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Settings;\r\n","import React, { useEffect } from \"react\";\r\nimport { Routes, Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport {\r\n  BookOutlined,\r\n  SettingOutlined,\r\n  TeamOutlined,\r\n  CalendarOutlined,\r\n} from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\nimport packageJson from \"../../../package.json\";\r\nimport GuardedRoute from \"../../utils/GuardedRoute\";\r\n\r\nimport WorkManagement from \"../workManagement\";\r\nimport StaffManagement from \"../staffManagement\";\r\nimport Settings from \"../settings\";\r\n\r\nconst Navigation = () => {\r\n  const { Header, Content, Sider, Footer } = Layout;\r\n  useEffect(() => {\r\n    document.title = \"Delicia Event Desk\";\r\n  }, []);\r\n\r\n  return (\r\n    <Layout style={{ minHeight: \"100vh\" }}>\r\n      <Sider\r\n        style={{\r\n          overflow: \"auto\",\r\n          height: \"100vh\",\r\n          position: \"fixed\",\r\n          left: 0,\r\n        }}\r\n      >\r\n        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"work\"]}>\r\n          <Menu.Item key=\"work\" icon={<BookOutlined />}>\r\n            <Link to=\"/\">Work Management</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"staff\" icon={<TeamOutlined />}>\r\n            <Link to=\"staffmanagement\">Staff Management</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"settings\" icon={<SettingOutlined />}>\r\n            <Link to=\"settings\">Settings</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout style={{ marginLeft: 200 }}>\r\n        <Header\r\n          style={{\r\n            position: \"fixed\",\r\n            zIndex: 1,\r\n            width: \"100%\",\r\n            padding: 0,\r\n            backgroundColor: \"#fff\",\r\n          }}\r\n        >\r\n          <div style={{ marginLeft: 20, display: \"block\" }}>\r\n            <h2>\r\n              <CalendarOutlined />\r\n              {moment().format(\"DD MMM YYYY\")}\r\n            </h2>\r\n          </div>\r\n        </Header>\r\n        <Content style={{ padding: \"0 30px\", marginTop: 90 }}>\r\n          <div\r\n            style={{\r\n              padding: 24,\r\n              minHeight: 360,\r\n              backgroundColor: \"#fff\",\r\n            }}\r\n          >\r\n            <Routes>\r\n              <GuardedRoute\r\n                path=\"/\"\r\n                element={<WorkManagement />}\r\n              />\r\n              <GuardedRoute\r\n                path=\"staffmanagement\"\r\n                element={<StaffManagement />}\r\n              />\r\n              <GuardedRoute path=\"settings\" element={<Settings />} />\r\n            </Routes>\r\n          </div>\r\n        </Content>\r\n        <Footer style={{ textAlign: \"center\" }}>\r\n          <p>nithin.antony@outook.in</p>\r\n          <p>version {packageJson.version}</p>\r\n        </Footer>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Form, Input, Button, notification, Row, Layout } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  CloseCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport packageJson from \"../../../package.json\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst { Footer } = Layout;\r\n\r\nconst AppLogin = () => {\r\n  const [buttonName, setButtonName] = useState(\"Login\");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  useEffect(() => {\r\n    document.title = \"Login - Delicia Event Desk\";\r\n  });\r\n  let navigate = useNavigate();\r\n  function handleSiginin(values) {\r\n    setButtonName(\"Logging\");\r\n    setIsSubmitting(true);\r\n    axios\r\n      .post(\r\n        \"http://localhost:4000/v1.0/user/login\",\r\n        {\r\n          userName: values.userName,\r\n          userPassword: values.userPassword,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          localStorage.setItem(\"isAuthenticated\", true);\r\n          navigate(\"/coreapp\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setButtonName(\"Login\");\r\n        setIsSubmitting(false);\r\n        notification.open({\r\n          message: `LOGIN ERROR`,\r\n          icon: <CloseCircleOutlined style={{ color: \"#f5222d\" }} />,\r\n        });\r\n      });\r\n  }\r\n  return (\r\n    <Layout\r\n      style={{\r\n        minHeight: \"100vh\",\r\n      }}\r\n    >\r\n      <Row type=\"flex\" justify=\"center\" align=\"middle\">\r\n        <div className=\"app-head\" style={{ marginTop: 50 }}>\r\n          <h1>Delicia Event Desk</h1>\r\n        </div>\r\n      </Row>\r\n      <Row\r\n        type=\"flex\"\r\n        justify=\"center\"\r\n        align=\"middle\"\r\n        style={{\r\n          minHeight: \"50vh\",\r\n        }}\r\n      >\r\n        <Form name=\"userLogin\" className=\"form\" onFinish={handleSiginin}>\r\n          <Form.Item\r\n            name=\"userName\"\r\n            validateTrigger=\"onBlur\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"please input your username!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              size=\"large\"\r\n              prefix={<UserOutlined />}\r\n              placeholder=\"username\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"userPassword\"\r\n            validateTrigger=\"onBlur\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"please input your password!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.Password\r\n              prefix={<LockOutlined />}\r\n              size=\"large\"\r\n              placeholder=\"password\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              size=\"large\"\r\n              className=\"login-button\"\r\n              loading={isSubmitting}\r\n            >\r\n              {buttonName}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Row>\r\n\r\n      <Footer style={{ textAlign: \"center\" }}>\r\n        <p>nithin.antony@outlook.in ©2021</p>\r\n        <p>version {packageJson.version}</p>\r\n      </Footer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default AppLogin;\r\n","import { Component } from \"react\";\nimport {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from \"react-router-dom\";\n\nimport GuardedRoute from \"./utils/GuardedRoute\";\nimport Navigation from \"./components/navigation\";\nimport AppLogin from \"./components/applogin\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.handleUnload = this.handleUnload.bind(this);\n  }\n  componentDidMount() {\n    window.addEventListener(\"beforeunload\", this.handleUnload);\n  }\n\n  handleUnload() {\n    localStorage.clear();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"beforeunload\", this.handleUnload);\n  }\n  render() {\n    return (\n      <>\n        <Router>\n          <Routes>\n            <GuardedRoute\n              exact\n              path=\"/\"\n              element={<Navigate to=\"/coreapp\" replace />}\n            ></GuardedRoute>\n            <Route exact path=\"/login\" element={<AppLogin />} />\n            <GuardedRoute exact path=\"/coreapp/*\" element={<Navigation />} />\n          </Routes>\n        </Router>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}