{"version":3,"sources":["components/workManagement/index.js","App.js","reportWebVitals.js","index.js"],"names":["formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","WorkRegistration","Form","useForm","form","name","onFinish","values","console","log","scrollToFirstError","Item","label","rules","type","message","required","title","QuestionCircleOutlined","whitespace","htmlType","App","fetch","then","response","json","data","Content","Layout","Sider","trigger","theme","mode","defaultSelectedKeys","icon","UserOutlined","UploadOutlined","className","style","margin","padding","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0XASMA,EAAiB,CACrBC,SAAU,CACRC,GAAI,CACFC,KAAM,IAERC,GAAI,CACFD,KAAM,IAGVE,WAAY,CACVH,GAAI,CACFC,KAAM,IAERC,GAAI,CACFD,KAAM,MAING,EAAqB,CACzBD,WAAY,CACVH,GAAI,CACFC,KAAM,GACNI,OAAQ,GAEVH,GAAI,CACFD,KAAM,GACNI,OAAQ,KA6ECC,EAxEU,WAAO,IAAD,EACdC,IAAKC,UAAbC,EADsB,oBAO7B,OACE,eAAC,IAAD,2BACMX,GADN,IAEEW,KAAMA,EACNC,KAAK,mBACLC,SATa,SAACC,GAChBC,QAAQC,IAAI,4BAA6BF,IASvCG,oBAAkB,EALpB,UAOE,cAAC,IAAKC,KAAN,CACEN,KAAK,cACLO,MAAM,eACNC,MAAO,CACL,CACEC,KAAM,OACNC,QAAS,gCAEX,CACEC,UAAU,EACVD,QAAS,uBAVf,SAcE,cAAC,IAAD,MAEF,cAAC,IAAKJ,KAAN,CACEN,KAAK,QACLO,MAAM,QACNC,MAAO,CACL,CACEG,UAAU,EACVD,QAAS,wBANf,SAUE,cAAC,IAAD,MAEF,cAAC,IAAKJ,KAAN,CACEN,KAAK,WACLO,MACE,gDAEE,cAAC,IAAD,CAASK,MAAM,uCAAf,SACE,cAACC,EAAA,EAAD,SAINL,MAAO,CACL,CACEG,UAAU,EACVD,QAAS,8BACTI,YAAY,IAdlB,SAkBE,cAAC,IAAD,MACW,IACb,cAAC,IAAKR,KAAN,2BAAeZ,GAAf,aACE,cAAC,IAAD,CAAQe,KAAK,UAAUM,SAAS,SAAhC,8BCxDOC,E,uKAxCb,WACEC,MAAM,8BACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUlB,QAAQC,IAAIiB,Q,oBAEhC,WAAU,IACAC,EAAmBC,IAAnBD,QAASE,EAAUD,IAAVC,MACjB,OACE,mCACE,eAAC,IAAD,WACE,cAACA,EAAD,CAAOC,QAAS,KAAhB,SACE,eAAC,IAAD,CAAMC,MAAM,OAAOC,KAAK,SAASC,oBAAqB,CAAC,KAAvD,UACE,cAAC,IAAKtB,KAAN,CAAmBuB,KAAM,cAACC,EAAA,EAAD,IAAzB,4BAAe,KAGf,cAAC,IAAKxB,KAAN,CAAmBuB,KAAM,cAACE,EAAA,EAAD,IAAzB,0BAAe,KAGf,cAAC,IAAKzB,KAAN,CAAmBuB,KAAM,cAACE,EAAA,EAAD,IAAzB,qBAAe,UAKnB,cAAC,IAAD,CAAQC,UAAU,cAAlB,SACE,cAACV,EAAD,CACEU,UAAU,yBACVC,MAAO,CACLC,OAAQ,YACRC,QAAS,IAJb,SAOE,cAAC,EAAD,iB,GAhCIC,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.33714499.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tooltip,\r\n  Button,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst WorkRegistration = () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Received values of form: \", values);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...formItemLayout}\r\n      form={form}\r\n      name=\"workregistration\"\r\n      onFinish={onFinish}\r\n      scrollToFirstError\r\n    >\r\n      <Form.Item\r\n        name=\"bookingDate\"\r\n        label=\"Booking Date\"\r\n        rules={[\r\n          {\r\n            type: \"date\",\r\n            message: \"The input is not valid date!\",\r\n          },\r\n          {\r\n            required: true,\r\n            message: \"Please input date!\",\r\n          },\r\n        ]}\r\n      >\r\n        <DatePicker />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"place\"\r\n        label=\"Place\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input place!\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"nickname\"\r\n        label={\r\n          <span>\r\n            Nickname&nbsp;\r\n            <Tooltip title=\"What do you want others to call you?\">\r\n              <QuestionCircleOutlined />\r\n            </Tooltip>\r\n          </span>\r\n        }\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input your nickname!\",\r\n            whitespace: true,\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>{\" \"}\r\n      <Form.Item {...tailFormItemLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Register\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default WorkRegistration;\r\n","import \"./App.css\";\nimport { Layout, Menu } from \"antd\";\n\nimport { UploadOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { Component } from \"react\";\nimport WorkRegistration from \"./components/workManagement\";\n\nclass App extends Component {\n  componentDidMount() {\n    fetch(\"http://localhost:4000/test\")\n      .then((response) => response.json())\n      .then((data) => console.log(data));\n  }\n  render() {\n    const { Content, Sider } = Layout;\n    return (\n      <>\n        <Layout>\n          <Sider trigger={null}>\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\n              <Menu.Item key=\"1\" icon={<UserOutlined />}>\n                Work Management\n              </Menu.Item>\n              <Menu.Item key=\"2\" icon={<UploadOutlined />}>\n                Staff Details\n              </Menu.Item>\n              <Menu.Item key=\"3\" icon={<UploadOutlined />}>\n                Settings\n              </Menu.Item>\n            </Menu>\n          </Sider>\n          <Layout className=\"site-layout\">\n            <Content\n              className=\"site-layout-background\"\n              style={{\n                margin: \"24px 16px\",\n                padding: 24,\n              }}\n            >\n              <WorkRegistration />\n            </Content>\n          </Layout>\n        </Layout>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}