{"version":3,"sources":["components/workManagement/index.js","components/staffDetails/index.js","components/navigation/index.js","App.js","reportWebVitals.js","index.js"],"names":["formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","WorkRegistration","Form","useForm","form","name","onFinish","values","console","log","scrollToFirstError","Item","label","rules","type","message","required","title","QuestionCircleOutlined","whitespace","htmlType","StaffRegistration","Navigation","Content","Layout","Sider","Footer","style","minHeight","theme","mode","defaultSelectedKeys","icon","BookOutlined","to","TeamOutlined","SettingOutlined","className","margin","padding","height","path","element","textAlign","App","exact","replace","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76dc359f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tooltip,\r\n  Button,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst WorkRegistration = () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Received values of form: \", values);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...formItemLayout}\r\n      form={form}\r\n      name=\"workregistration\"\r\n      onFinish={onFinish}\r\n      scrollToFirstError\r\n    >\r\n      <Form.Item\r\n        name=\"bookingDate\"\r\n        label=\"Booking Date\"\r\n        rules={[\r\n          {\r\n            type: \"date\",\r\n            message: \"The input is not valid date!\",\r\n          },\r\n          {\r\n            required: true,\r\n            message: \"Please input date!\",\r\n          },\r\n        ]}\r\n      >\r\n        <DatePicker />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"place\"\r\n        label=\"Place\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input place!\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"nickname\"\r\n        label={\r\n          <span>\r\n            Nickname&nbsp;\r\n            <Tooltip title=\"What do you want others to call you?\">\r\n              <QuestionCircleOutlined />\r\n            </Tooltip>\r\n          </span>\r\n        }\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input your nickname!\",\r\n            whitespace: true,\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>{\" \"}\r\n      <Form.Item {...tailFormItemLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Register\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default WorkRegistration;\r\n","import React from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst StaffRegistration = () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Received values of form: \", values);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...formItemLayout}\r\n      form={form}\r\n      name=\"staffregistration\"\r\n      onFinish={onFinish}\r\n      scrollToFirstError\r\n    >\r\n      <Form.Item\r\n        name=\"staffName\"\r\n        label=\"Staff Name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input staff name!\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"staffMobileNo\"\r\n        label=\"Staff Mobile No\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input staff mobile number!\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item {...tailFormItemLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Register\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default StaffRegistration;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Routes, Route, Link, useNavigate } from \"react-router-dom\";\r\nimport { Layout, Menu, Avatar, Tag, Dropdown, Modal } from \"antd\";\r\nimport { BookOutlined, SettingOutlined, TeamOutlined } from \"@ant-design/icons\";\r\n// import GuardedRoute from \"../../utils/GuardedRoute\";\r\n\r\nimport WorkRegistration from \"../workManagement\";\r\nimport StaffRegistration from \"../staffDetails\";\r\n\r\n// import \"./index.scss\";\r\n\r\n// const { Header, Content, Footer, Sider } = Layout;\r\n// const { SubMenu } = Menu;\r\n\r\nconst Navigation = () => {\r\n  console.log(\"Navigation called\");\r\n  const { Content, Sider, Footer } = Layout;\r\n  return (\r\n    <Layout style={{ minHeight: \"100vh\" }}>\r\n      <Sider>\r\n        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n          <Menu.Item key=\"1\" icon={<BookOutlined />}>\r\n            <Link to=\"/\">Work Management</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\" icon={<TeamOutlined />}>\r\n            <Link to=\"staffmanagement\">Staff Details</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"3\" icon={<SettingOutlined />}>\r\n            <Link to=\"settings\">Settings</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout className=\"site-layout\">\r\n        <Content\r\n          className=\"site-layout-background\"\r\n          style={{\r\n            margin: \"24px 16px\",\r\n            padding: 24,\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <Routes>\r\n            <Route path=\"/\" element={<WorkRegistration />} />\r\n            <Route path=\"staffmanagement\" element={<StaffRegistration />} />\r\n          </Routes>\r\n        </Content>\r\n        <Footer style={{ textAlign: \"center\" }}>nithin.antony Design</Footer>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { Component } from \"react\";\nimport {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from \"react-router-dom\";\n\nimport Navigation from \"./components/navigation\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router>\n          <Routes>\n            <Route\n              exact\n              path=\"/\"\n              element={<Navigate to=\"/coreapp\" replace />}\n            ></Route>\n            {/* <Route exact path=\"/login\" element={<AppLogin />} /> */}\n            {/* <GuardedRoute exact path=\"/coreapp/*\" element={<Navigation />} /> */}\n            <Route exact path=\"/coreapp/*\" element={<Navigation />} />\n            {/* <Route exact path=\"*\" element={<EmptyPage />} /> */}\n          </Routes>\n        </Router>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}